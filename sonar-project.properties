# Información del proyecto en SonarQube
sonar.projectKey=mi-nuxt-proyecto
sonar.projectName=nuxt-app
sonar.projectVersion=1.0
sonar.sourceEncoding=UTF-8

# Configuración del servidor SonarQube
sonar.host.url=http://localhost:9000
sonar.token=squ_b916914319e5110822dd924b0eb8bd85781f6aab

# Directorios de análisis
sonar.sources=.
sonar.tests=.
sonar.inclusions=**/*.vue,**/*.ts,**/*.js,**/*.json,**/*.graphql,nuxt.config.ts,**/*.css,**/*.scss,**/*.html,layouts/**/*.vue,pages/**/*.vue,components/**/*.vue,composables/**/*.ts,plugins/**/*.ts,server/**/*.ts
sonar.test.inclusions=**/*.spec.js,**/*.spec.ts,**/*.test.js,**/*.test.ts

# Exclusiones para omitir archivos innecesarios
sonar.exclusions=node_modules/**,dist/**,**/*.d.ts,**/build/**,**/coverage/**,**/yarn.lock,**/*.min.js,**/*.config.js,**/vendor/**

# Configuración para JavaScript y TypeScript
sonar.javascript.file.suffixes=.js,.jsx,.vue
sonar.typescript.file.suffixes=.ts,.tsx
sonar.typescript.tsconfigPath=tsconfig.json

# Reportes de cobertura y pruebas unitarias
sonar.javascript.lcov.reportPaths=coverage/lcov-report/lcov-info.lcov
sonar.typescript.lcov.reportPaths=coverage/lcov-report/lcov-info.lcov
sonar.testExecutionReportPaths=coverage/sonar-test-report.xml


# Detección de duplicados y complejidad
sonar.duplication.include=**/*.js,**/*.ts,**/*.vue,**/*.css,**/*.scss
sonar.cpd.exclusions=**/*.min.js,dist/**,coverage/**
sonar.cpd.minLines=5
sonar.cpd.minTokens=30
sonar.complexity.fileComplexityThreshold=25
sonar.complexity.functionComplexityThreshold=8

# Configuración de calidad y deuda técnica
sonar.qualitygate.wait=true
sonar.technical.debt.ratio=1.0
sonar.technical.debt.remediation=60min

# Comentarios y documentación
sonar.javascript.commentRegex=//.*|/\*[\s\S]*?\*/|<!--.*-->
sonar.typescript.commentRegex=//.*|/\*[\s\S]*?\*/

# Seguridad y vulnerabilidad
sonar.security.fileExtensions=.vue,.js,.ts,.html
sonar.security.sources=.

# Optimización de rendimiento
sonar.performance.include=**/*.vue,**/*.ts,**/*.js
sonar.performance.memory.limit=2048MB  # Aumentado a 2GB para análisis máximo

# Configuración para uso de APIs
sonar.apiUsage.include=server/api/**/*.ts,server/mutations/**/*.ts,server/queries/**/*.ts
sonar.api.risk.threshold=8

# Profundidad y detalle del análisis
sonar.verbose=true

# Integración de herramientas externas
sonar.junit.reportPaths=test-results/test-junit.xml
sonar.coverage.jacoco.xmlReportPaths=coverage/jacoco.xml

# Configuración de archivos de lenguaje
# SonarQube autodetectará los lenguajes del proyecto
